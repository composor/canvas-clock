{"version":3,"file":"app.js","sources":["../node_modules/composi/lib/h.js","../node_modules/composi/lib/patch.js","../node_modules/composi/lib/mixin.js","../node_modules/composi/lib/component.js","../dev/components/title.js","../dev/components/clock.js","../dev/app.js"],"sourcesContent":["/**\n * Hyperscript function. Enables definition of HTML/SVG using functions.\n * @param {string} type The name of the HTML or SVG tag to create.\n * @param {object} props And object of property/value pairs.\n * @param {string, number, boolean, any[]} children Any child elements.\n */\nexport function h(type, props, ...args) {\n  let stack = [], node\n  const children = []\n  stack = stack.concat(args.reverse())\n\n  while (stack.length) {\n    if (Array.isArray((node = stack.pop()))) {\n      node.map(item => stack.unshift(item))\n    } else if (node != null && node !== true && node !== false) {\n      typeof node === \"number\" ? node = node + '' : node\n      children.push(node)\n    }\n  }\n  \n  return typeof type === \"string\" \n    ? {type, props: props || {}, children } \n    : type(props || {}, children)\n}\n","/**\n * A function to merge two objects together. The properties of the second object will overwrite any matching properties in the first object.\n * @param {Object} obj1 The first object to merge.\n * @param {Object} obj2 The second object to merge.\n */\nfunction mixin(obj1, obj2) {\n  const result = {}\n  for (let i in obj1) {\n    result[i] = obj1[i]\n  }\n  for (let i in obj2) {\n    result[i] = obj2[i]\n  }\n  return result\n}\n\n/**\n * @constructor \n * @param {node} oldNode Original node or null.\n * @param {node} node New node.\n * @param {node} element The component root element.\n * @param {node} container The container element in which component is rendered.\n */\nexport function patch(oldNode, node, element, container) {\n  return diffAndPatch(container || document.body, element, oldNode, node)\n}\n\n/**\n * Patch functions:\n * setProps \n * createNode\n * createElement\n * getKey\n * updateElement\n * removeElement\n * diffAndPatch\n */\n\n/**\n * Function to set properties and attributes on element.\n * @param {node} element \n * @param {string} name \n * @param {string|number|boolean} value \n * @param {string|number|boolean} oldValue \n */\nfunction setProps(element, name, value, oldValue) {\n  if (name === 'key') {\n  } else if (name === 'style') {\n    for (let name in mixin(oldValue, (value = value || {}))) {\n      element.style[name] = String(value[name]) || ''\n    }\n  } else {\n    try {\n      element[name] = value\n    } catch (err) {}\n\n    if (typeof value !== 'function') {\n      if (!!value) {\n        // Support SVG 'xlink:href' property:\n        if (name === 'xlink-href') {\n          element.setAttributeNS('http://www.w3.org/1999/xlink', 'href', value)\n        } else {\n          element.setAttribute(name, value)\n        }\n      } else {\n        element.removeAttribute(name)\n      }\n    }\n  }\n}\n\n/**\n * Function to create an HTML or SVG node.\n * @param {node} node node A node to create.\n * @param {svg} svg Whether the node is SVG or not.\n */\nfunction createNode(node, svg) {\n  const element = (svg = svg || node.type === \"svg\")\n  ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.type)\n  : document.createElement(node.type)\n\n  Object.keys(node.props).forEach(key => setProps(element, key, node.props[key]))\n  node.children.map(child => element.appendChild(createElement(child, svg)))\n  return element\n}\n\n/**\n * Function to convert hyperscript/JSX into DOM nodes.\n * @param {jsx|hyperscript} node A node to create.\n * @param {svg} svg Whether the node is SVG or not.\n */\nfunction createElement(node, svg) {\n  return typeof node === \"string\" ? document.createTextNode(node) : createNode(node, svg)\n}\n\n/**\n * Function to get a node's key.\n * @param {node} node \n */\nfunction getKey(node) {\n  if (node && node.props) {\n    return node.props.key\n  }\n}\n\n/**\n * Update an element with new values for properties and/or children.\n * @param {Element} element \n * @param {node} oldProps \n * @param {object} props \n */\nfunction updateElement(element, oldProps, props) {\n  Object.keys(mixin(oldProps, props)).forEach(key => {\n    let value = props[key]\n    let oldValue = key === \"value\" || key === \"checked\" ? element[key] : oldProps[key]\n\n    if (value !== oldValue) setProps(element, key, value, oldValue)\n  })\n}\n\n/**\n * Function to remove element from DOM.\n * @param {node} container The container of the element to remove.\n * @param {node} element The element to remove.\n */\nconst removeElement = (container, element) => container.removeChild(element)\n\n/**\n * Function to patch DOM. Diffs virtual nodes, then patches the DOM.\n * @param {node} container \n * @param {node} element \n * @param {node} oldNode \n * @param {node} node \n * @param {boolean} svg \n * @param {node} nextSibling \n */\nfunction diffAndPatch(container, element, oldNode, node, svg, nextSibling) {\n  if (oldNode == null) {\n    element = container.insertBefore(createElement(node, svg), element)\n  } else if (node.type != null && node.type === oldNode.type) {\n    updateElement(element, oldNode.props, node.props)\n\n    svg = svg || node.type === \"svg\"\n    const len = node.children.length\n    let oldLen = oldNode.children.length\n    let oldKeyed = {}\n    let oldElements = []\n    let keyed = {}\n\n    let k = 0\n    while (k < oldLen) {\n      let oldElement = (oldElements[k] = element.childNodes[k])\n      let oldChild = oldNode.children[k]\n      let oldKey = getKey(oldChild)\n      if (null != oldKey) oldKeyed[oldKey] = [oldElement, oldChild]\n      k++\n    }\n\n    let i = 0, j = 0\n\n    while (j < len) {\n      let oldElement = oldElements[i]\n      let oldChild = oldNode.children[i]\n      let newChild = node.children[j]\n      let oldKey = getKey(oldChild)\n  \n      if (keyed[oldKey]) {\n        i++\n        continue\n      }\n      \n      let newKey = getKey(newChild)\n      let keyedNode = oldKeyed[newKey] || []\n\n      if (null == newKey) {\n        if (null == oldKey) {\n          diffAndPatch(element, oldElement, oldChild, newChild, svg)\n          j++\n        }\n        i++\n      } else {\n        oldKey === newKey ? diffAndPatch(element, keyedNode[0], keyedNode[1], newChild, svg) && i++ :\n        keyedNode[0] ? element.insertBefore(keyedNode[0], oldElement) && diffAndPatch(element, keyedNode[0], keyedNode[1], newChild, svg) : diffAndPatch(element, oldElement, null, newChild, svg)\n        \n        keyed[newKey] = newChild\n\n        j++\n      }\n    }\n\n    while (i < oldLen) {\n      let oldChild = oldNode.children[i]\n      let oldKey = getKey(oldChild)\n      if (null == oldKey) removeElement(element, oldElements[i])\n      i++\n    }\n\n    Object.keys(oldKeyed).forEach(key => {\n      let keyedNode = oldKeyed[key]\n      let reusableNode = keyedNode[1]\n      if (!keyed[reusableNode.props.key]) {\n        removeElement(element, keyedNode[0])\n      }\n    })\n  } else if (element && node !== element.nodeValue) {\n    if (typeof node === \"string\" && typeof oldNode === \"string\") {\n      element.nodeValue = node\n    } else {\n      element = container.insertBefore(\n        createElement(node, svg),\n        (nextSibling = element)\n      )\n      removeElement(container, nextSibling, oldNode.data)\n    }\n  }\n  return element\n}\n","/**\n * A mixin function used for updating component state.\n * @param {object} obj1 An object as the target.\n * @param {object} obj2 An object of properties to target.\n */\nexport const mixin = (obj1, obj2) => {\n  Object.keys(obj2).forEach(p => {\n    if (obj2.hasOwnProperty(p)) {\n      Object.defineProperty(obj1, p, {\n        value: obj2[p],\n        writable: true,\n        enumerable: false,\n        configurable: true\n      })\n    }\n  })\n}\n","import {h} from './h'\nimport {patch} from './patch'\nimport {mixin} from './mixin'\n\nvar rAF = window.requestAnimationFrame\n  || window.webkitRequestAnimationFrame\n  || window.mozRequestAnimationFrame\n  || window.msRequestAnimationFrame\n  || function(cb) { return setTimeout(cb, 16) }\n\n/**\n * @type {object} dataStore A pseudo-private property using Date object to store the component's state.\n */\nconst dataStore = new Date().getTime()\n\n/**\n * @class Class to create a component\n */\nexport class Component {\n  /**\n   * Constructor for Component class.\n   * @typedef {object} props An object of property/values to configure the class instance.\n   * @property {string|element} props.container The container element in which to render the component.\n   * @property {state} [props.state] The state object of the component. This can be of type boolean, string, number, object or array.\n   * @property {function} props.render A function that returns nodes to render to the DOM.\n   */\n  constructor(props) {\n    /** @type {props} */\n    if (!props) props = {}\n    this.selector = props.container || props.root ||  'body'\n    \n    if (props.render) {\n      this.render = props.render\n    }\n    \n    if (props.state) {\n      this.state = props.state\n    }\n\n    this.oldNode = null\n    if (this.selector) {\n      this.container = document.querySelector(this.selector)\n    }\n    this.componentShouldUpdate = true\n    \n    this.mounted = false\n    this.element\n    \n    /**\n     * Handle lifecycle methods.\n     */\n    if (props.beforeCreateComponent) {\n      this.beforeCreateComponent = props.beforeCreateComponent\n    }\n    if (props.componentWasCreated) {\n      this.componentWasCreated = props.componentWasCreated\n    }\n    if (props.componentWillUpdate) {\n      this.componentWillUpdate = props.componentWillUpdate\n    }\n    if (props.componentDidUpdate) {\n      this.componentDidUpdate = props.componentDidUpdate\n    }\n    if (props.componentWillUnmount) {\n      this.componentWillUnmount = props.componentWillUnmount\n    }\n  }\n\n  /**\n   * Define getters and setters for state.\n   */\n  set state(data) {\n    this[dataStore] = data\n    rAF(() => this.update())\n  }\n\n  get state() {\n    return this[dataStore]\n  }\n  \n  /**\n   * Method to set a component's state.\n   * @param {string|number|boolean|object|array} data The data to set.\n   * @param {number} [position] The index of an array whose data you want to set.\n   */\n  setState(data, position) {\n    if (typeof data === 'function') {\n      const state = data.call(this, this.state)\n      if (typeof state !== 'function' && !!state) this.setState(state)\n    }\n    if (Array.isArray(this.state)) {\n      const state = this.state\n      if (position || position === 0) {\n        if (typeof state[position] === 'object') {\n          mixin(state[position], data)\n          this.state = state\n        } else {\n          state[position] = data\n          this.state = state\n        }\n      } else {\n        this.state = state\n      }\n    } else if (typeof this.state === 'object') {\n      const state = this.state\n      mixin(state, data)\n      this.state = state\n    } else {\n      this.state = data\n    }\n  }\n\n  /**\n   * Function to render component after data changes.\n   * If data is passed as argument, it will be used.\n   * Otherwise state will be used.\n   * @param {boolean|number|string|object|array} [data ]\n   * @returns void\n   */\n  update(data) {\n    if (!this.render) return\n\n    // If data is 0 or not boolean, use,\n    // else use component state.\n    let __data  = this.state\n    if (data !== true && (data === 0 || data)) __data = data\n\n    if (this.container && typeof this.container === 'string') {\n      this.selector = this.container\n      this.container = document.querySelector(this.container)\n    }\n\n    // Check if vnode already exists.\n    // Used for deciding whether to fire lifecycle events.\n    const __oldNode = this.oldNode\n    const __render = this.render\n    function testIfVNodesDiffer(data) {\n      try {\n        if (JSON.stringify(this.oldNode) === JSON.stringify(__render(data))) {\n          return false\n        } else {\n          return true\n        }\n      } catch(err) {\n        return true\n      }\n    }\n    // Create virtual dom and check if component id already exists in document.\n    const vdom = this.render(__data)\n    let elem\n    if (vdom && vdom.props && vdom.props.id) {\n      try {\n        elem = this.container.querySelector(`#${vdom.props.id}`)\n      } catch(err) {}\n    }\n\n    // If component element id already exists in DOM, \n    // remove it before rendering the component.\n    if (elem && !this.mounted) {\n      elem.parentNode.removeChild(elem)\n    }\n\n    // Patch DOM with component update.\n    this.element = patch(\n      this.oldNode,\n      (this.oldNode = this.render(__data)),\n      this.element,\n      this.container\n    )\n    if (this.mounted && this.oldNode && testIfVNodesDiffer(__data)) {\n      this.componentWillUpdate && this.componentWillUpdate(this)\n    } else {\n      this.beforeCreateComponent && this.beforeCreateComponent(this)\n      this.componentWasCreated && this.componentWasCreated(this)\n      this.mounted = true\n      return\n    }\n    this.componentDidUpdate && testIfVNodesDiffer(__data) && this.componentDidUpdate(this)\n  }\n  \n  /**\n   * Method to destroy component.\n   * First unbind events.\n   * Then remove component element from DOM.\n   * Also null out component properties.\n   * @returns void\n   */\n  unmount() {\n    const self = this\n    this.componentWillUnmount && this.componentWillUnmount(this)\n    this.container.removeChild(this.element)\n    this.container = undefined\n    for (let key in this) {\n      delete this[key]\n    }\n    delete this.state\n    this.update = undefined\n    this.unmount = undefined\n  }\n}\n\n// Polyfill for Element.closest:\nif (window.Element && !Element.prototype.closest) {\n  Element.prototype.closest = \n  function(s) {\n    let matches = (this.document || this.ownerDocument).querySelectorAll(s)\n    let i\n    let el = this\n    do {\n      i = matches.length\n      while (--i >= 0 && matches.item(i) !== el) {}\n    } while ((i < 0) && (el = el.parentElement))\n    return el\n  }\n}\n","import {h, Component} from 'composi'\n\nexport const title = new Component({\n  container: 'header',\n  render: (message) => {\n    return (\n      <nav>\n        <h1>{message}</h1>\n      </nav>\n    )\n  }\n})\n","import {h, Component} from 'composi'\n\n// Define clock component:\nexport class Clock extends Component {\n  constructor(props) {\n    super(props)\n    this.props = props\n    this.state = { time: new Date() }\n    this.radius = this.props.size / 2;\n    this.drawingContext = null;\n    this.hourFormat = props.hourFormat\n    this.drawRoman = this.hourFormat.toLowerCase().trim() === \"roman\";\n\n   }\n\n   render(data) {\n     return (\n       <div className=\"Clock\">\n         <h2>Canvas Clock</h2>\n         <canvas width=\"250\" height=\"250\" ref=\"clockCanvas\"/>\n         <p><button>Toggle Hour Format</button></p>\n       </div>\n     )\n   }\n\n   getDrawingContext() {\n      this.drawingContext = this.element.querySelector('canvas').getContext('2d');\n      this.drawingContext.translate(this.radius, this.radius);\n      this.radius *= 0.9;\n   }\n\n   tick() {\n      this.setState({ time: new Date() });\n      const radius = this.radius;\n      let ctx = this.drawingContext;\n      this.drawFace(ctx, radius);\n      this.drawNumbers(ctx, radius);\n      this.drawTicks(ctx, radius);\n      this.drawTime(ctx, radius);\n   }\n\n   drawFace(ctx, radius) {\n      ctx.beginPath();\n      ctx.arc(0,0, radius, 0, 2 * Math.PI);\n      ctx.fillStyle = \"#FEF6EF\";\n      ctx.fill();\n      const grad = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);\n      grad.addColorStop(0, \"#FF7F50\");\n      grad.addColorStop(0.5, \"white\");\n      grad.addColorStop(1, \"#FF7F50\");\n      ctx.strokeStyle = grad;\n      ctx.lineWidth = radius * 0.1;\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.arc(0, 0, radius * 0.05, 0, 2 * Math.PI);\n      ctx.fill();\n   }\n\n   drawNumbers(ctx, radius) {\n      const romans = [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\"];\n      const fontBig = radius * 0.15 + \"px Arial\";\n      const fontSmall = radius * 0.075 + \"px Arial\";\n      let ang, num;\n      ctx.textBaseline = \"middle\";\n      ctx.textAlign = \"center\";\n      for (num = 1; num < 13; num++) {\n         ang = num * Math.PI / 6;\n         ctx.rotate(ang);\n         ctx.translate(0, -radius * 0.78);\n         ctx.rotate(-ang);\n         ctx.font = fontBig;\n         ctx.fillStyle = \"black\";\n         ctx.fillText(this.drawRoman ? romans[num-1] : num.toString(), 0, 0);\n         ctx.rotate(ang);\n         ctx.translate(0, radius * 0.78);\n         ctx.rotate(-ang);\n      }\n   }\n\n   drawTicks(ctx, radius) {\n      let numTicks, tickAng, tickX, tickY;\n      for (numTicks = 0; numTicks < 60; numTicks++) {\n         tickAng = (numTicks * Math.PI / 30);\n         tickX = radius * Math.sin(tickAng);\n         tickY = -radius * Math.cos(tickAng);\n         ctx.beginPath();\n         ctx.lineWidth = radius * 0.010;\n         ctx.moveTo(tickX, tickY);\n         if (numTicks % 5 === 0) {\n            ctx.lineTo(tickX * 0.88, tickY * 0.88);\n         } else {\n            ctx.lineTo(tickX * 0.92, tickY * 0.92);\n         }\n         ctx.stroke();\n      }\n   }\n\n   drawTime(ctx, radius) {\n      const now = this.state.time;\n      let hour = now.getHours();\n      let minute = now.getMinutes();\n      let second = now.getSeconds();\n\n      // hour:\n      hour %= 12;\n      hour = (hour * Math.PI / 6) + (minute * Math.PI / (6 * 60)) + (second * Math.PI / (360 * 60));\n      this.drawHand(ctx, hour, radius * 0.5, radius * 0.05);\n      // minute:\n      minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));\n      this.drawHand(ctx, minute, radius * 0.8, radius * 0.05);\n      // second:\n      second = (second * Math.PI / 30);\n      this.drawHand(ctx, second, radius * 0.9, radius * 0.02, \"red\");\n      this.interval\n   }\n\n   drawHand(ctx, position, length, width, color) {\n      color = color || \"black\";\n      ctx.beginPath();\n      ctx.lineWidth = width;\n      ctx.lineCap = \"round\";\n      ctx.fillStyle = color;\n      ctx.strokeStyle = color;\n      ctx.moveTo(0, 0);\n      ctx.rotate(position);\n      ctx.lineTo(0, -length);\n      ctx.stroke();\n      ctx.rotate(-position);\n  }\n\n  handleEvent(e) {\n    if (e.target.nodeName === 'BUTTON') {\n      this.drawRoman = !this.drawRoman\n      this.update()\n    }\n  }\n\n  componentWasCreated() {\n    this.element.addEventListener('click', this)\n    this.getDrawingContext();\n    this.interval = setInterval(() => {\n      this.tick()\n    }, 200)\n  }\n  \n  componentWillUnmount() {\n    clearInterval(this.interval)\n  }\n}\n","import {h, Component} from 'composi'\nimport {title} from './components/title'\nimport {Clock} from './components/clock'\n\ntitle.state = 'Composi Canvas Clock'\n\n\n\n// Create clock instance:\nconst clock = new Clock({\n  container: 'section',\n  size: 250,\n  width: 250,\n  standard: 'normal',\n  hourFormat: \"roman\"\n})\n// Start Clock:\nclock.update()\n"],"names":["h","type","props","stack","node","children","args","concat","reverse","length","Array","isArray","pop","map","unshift","item","push","mixin","obj1","obj2","result","i","setProps","element","name","value","oldValue","style","String","err","setAttributeNS","setAttribute","removeAttribute","createElement","svg","document","createTextNode","createElementNS","keys","forEach","key","appendChild","child","createNode","getKey","diffAndPatch","container","oldNode","nextSibling","insertBefore","oldProps","len","oldLen","oldKeyed","oldElements","keyed","k","oldElement","childNodes","oldChild","oldKey","j","newChild","newKey","keyedNode","removeElement","reusableNode","nodeValue","data","removeChild","hasOwnProperty","p","defineProperty","rAF","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cb","setTimeout","dataStore","Date","getTime","Component","selector","root","render","state","this","querySelector","componentShouldUpdate","mounted","beforeCreateComponent","componentWasCreated","componentWillUpdate","componentDidUpdate","componentWillUnmount","position","call","setState","babelHelpers.typeof","testIfVNodesDiffer","JSON","stringify","__render","__data","vdom","elem","id","parentNode","body","patch","undefined","update","unmount","_this","Element","prototype","closest","s","matches","ownerDocument","querySelectorAll","el","parentElement","title","message","Clock","time","radius","size","drawingContext","hourFormat","drawRoman","toLowerCase","trim","className","width","height","ref","getContext","translate","ctx","drawFace","drawNumbers","drawTicks","drawTime","beginPath","arc","Math","PI","fillStyle","fill","grad","createRadialGradient","addColorStop","strokeStyle","lineWidth","stroke","romans","fontBig","ang","num","textBaseline","textAlign","rotate","font","fillText","toString","numTicks","tickAng","tickX","tickY","sin","cos","moveTo","lineTo","now","hour","getHours","minute","getMinutes","second","getSeconds","drawHand","interval","color","lineCap","e","target","nodeName","addEventListener","getDrawingContext","setInterval","tick"],"mappings":"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"}